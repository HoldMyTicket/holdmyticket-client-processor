(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("axios"));
	else if(typeof define === 'function' && define.amd)
		define(["axios"], factory);
	else if(typeof exports === 'object')
		exports["hmt_client_processor"] = factory(require("axios"));
	else
		root["hmt_client_processor"] = factory(root["axios"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_axios__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/hmt-client-processor.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/hmt-client-processor.js":
/*!*************************************!*\
  !*** ./src/hmt-client-processor.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar hmt_client_processor = {\n\n  api_url: '', // set when the script is loaded\n  \n  app_type: '', // set prior to submit (online | box)\n\n  current_processor: '',\n\n  url_prefix: function(endpoint){\n\n    return this.api_url + endpoint\n\n  },\n  \n  spreedly_url: function(spreedly_environment_key){\n\n    return 'https://core.spreedly.com/v1/payment_methods.json?environment_key='+spreedly_environment_key\n    \n  },\n  \n  fullsteam_url: function(){\n\n    return 'https://api-ext.fullsteampay.net/'\n\n  },\n  \n  submit_transaction: function(card, transaction, cb){\n    this._remove_card_data()\n    // determine the method to use spreedly | fullsteam    \n\n    if(transaction.processor_method == 'spreedly')\n      this._submit_spreedly(card, transaction, cb)\n    else if(transaction.processor_method == 'fullsteam')\n      this._submit_fullsteam(card, transaction, cb)\n    else\n      this._throw_error(true, {status: 'error', msg: 'No processing method setup'}, cb)\n      \n  },\n  \n  /* SPREEDLY */\n  \n  _submit_spreedly: function(card, transaction, cb){    \n\n    var me = this\n    me.current_processor = 'spreedly'\n\n    if (transaction.payment_token) {\n      me._submit_spreedly_transaction(transaction, function(err, transaction_res) {\n\t\t\t\t// if (!err && transaction_res.ticket_key) me._save_card_to_webuser({ ticket_key: transaction_res.ticket_key });\n\n\t\t\t\thmt_client_processor._respond(err, transaction_res, cb);\n\t\t\t});\n    } else {\n      me._get_spreedly_token(card, transaction.spreedly_environment_key, function(err, token_res){\n\n        if(err) {\n          hmt_client_processor._throw_error(err, token_res, cb)\n          return;\n        }\n  \n        transaction.payment_token = token_res.transaction.payment_method.token\n        \n        me._submit_spreedly_transaction(transaction, function(err, transaction_res){\n          \n          if(!err && transaction_res.ticket_key)\n            me._save_card_to_webuser({ticket_key: transaction_res.ticket_key})\n  \n          hmt_client_processor._respond(err, transaction_res, cb)\n          \n        })\n        \n      })\n    }\n\n    if(transaction.cc_retain && transaction.cc_retain == 'y')\n        me.save_card(card, transaction, 'fullsteam')\n    \n  },\n  \n  _get_spreedly_token: function(card, spreedly_environment_key, cb){\n\n    this._request({\n      url: this.spreedly_url(spreedly_environment_key),\n      type: 'POST',\n      withCredentials: false,\n      data: card,\n      cb: function(err, res){\n        hmt_client_processor._respond(err, res, cb)\n      }\n    })\n    \n  },\n  \n  _submit_spreedly_transaction: function(transaction, cb){\n\n    this._request({\n      url: this.url_prefix('shop/carts/submit'),\n      type: 'POST',\n      data: transaction,\n      form_encoded: true,\n      withCredentials: true,\n      cb: function(err, json){\n        hmt_client_processor._respond(err, json, cb)\n      }\n    })\n    \n  },\n  \n  /* FULLSTEAM */\n  \n  _submit_fullsteam: function(card, transaction, cb){\n    \n    var me = this\n    me.current_processor = 'fullsteam'\n\n    if (transaction.payment_token) {\n\n      me._submit_fullsteam_transaction(transaction, function(err, transaction_res){\n        console.log('submit_fullsteam res', err, transaction_res)\n        \n        hmt_client_processor._respond(err, transaction_res, cb)\n    \n      })\n\n    } else {\n      me._get_fullsteam_auth_key(function(err, authentication_key_res){\n\n        var auth_key = null\n        \n        if(authentication_key_res && authentication_key_res.status && authentication_key_res.status == 'ok' && authentication_key_res.authenticationKey)\n          auth_key = authentication_key_res.authenticationKey\n        \n        // TODO validate the key\n        \n        me._get_fullsteam_token(card, transaction, auth_key, function(err, token_res){\n          \n          // TODO validate the token\n          \n          if(!token_res || !token_res.isSuccessful || !token_res.token)\n            return hmt_client_processor._handle_fullsteam_error(token_res, cb)\n  \n          transaction.payment_token = token_res.token\n        \n          me._submit_fullsteam_transaction(transaction, function(err, transaction_res){\n            console.log('submit_fullsteam res', err, transaction_res)\n  \n            if(!err && transaction_res.ticket_key)\n              me._save_card_to_webuser({ticket_key: transaction_res.ticket_key})\n            \n            hmt_client_processor._respond(err, transaction_res, cb)\n        \n          })\n        \n        })\n  \n      })\n    }\n\n    if(transaction.cc_retain && transaction.cc_retain == 'y'){\n      if(!transaction.spreedly_environment_key){\n        transaction.spreedly_environment_key = me._get_spreedly_env_key()\n      }\n      me.save_card(card, transaction, 'spreedly')\n    }\n\n  },\n\n  _get_spreedly_env_key: function(){\n    if(this.spreedly_environment_key)\n      return this.spreedly_environment_key\n\n    if(config && config.spreedly_environment_key)\n      return config.spreedly_environment_key\n\n    return ''\n  },\n\n  save_card: function(card, transaction, processor, ticket_key){\n    var me = this\n\n    console.log(\"SAVE CARD\", card, transaction, ticket_key)\n\n    if(!card || !card.payment_method || !card.payment_method.credit_card)\n      return\n\n    var card_data = card.payment_method.credit_card\n\n    var args = {card: card_data, processor: processor}\n\n    ticket_key = ticket_key || ''\n    if(ticket_key)\n      args.ticket_key = ticket_key\n\n    if(processor == 'spreedly'){\n      me._get_spreedly_token(card, transaction.spreedly_environment_key, function(err, token_res){\n        console.log('spreedly token result', err, token_res)\n        if(err) {\n          return;\n        }\n        if(token_res.transaction && token_res.transaction.payment_method && token_res.transaction.payment_method.token)\n          args.token = token_res.transaction.payment_method.token\n\n        me._save_card_to_webuser(args);\n        \n      })\n    }\n\n    if(processor == 'fullsteam'){\n      me._get_fullsteam_auth_key(function(err, authentication_key_res){\n\n      var env_key = null\n      \n      if(authentication_key_res && authentication_key_res.status && authentication_key_res.status == 'ok' && authentication_key_res.authenticationKey)\n        env_key = authentication_key_res.authenticationKey\n\n        if(!env_key)\n          return\n\n        me._get_fullsteam_token(card, transaction, env_key, function(err, token_res){\n          \n          if(!token_res || !token_res.isSuccessful || !token_res.token)\n            return\n\n          args.token = token_res.token;\n        \n          me._save_card_to_webuser(args);\n        \n        })\n\n      })\n\n    }\n\n  },\n\n  webuser_save_card: function(card, data, cb) {\n\t\tvar me = this;\n\n\t\tme._get_spreedly_token(card, data.spreedly_environment_key, function(err, token_res) {\n\t\t\tconsole.log('spreedly token result', err, token_res);\n\t\t\tif (err) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar request_data = {\n\t\t\t\ttoken: token_res.transaction.payment_method.token,\n\t\t\t\tvault: 'spreedly'\n\t\t\t};\n\n\t\t\tme._request({\n\t\t\t\turl: me.url_prefix('public/users/save_credit_card'),\n\t\t\t\ttype: 'POST',\n\t\t\t\twithCredentials: false,\n\t\t\t\tdata: request_data,\n\t\t\t\tform_encoded: true,\n\t\t\t\tcb: function(err, res) {\n          if(res && res.status == '200' && res.statusText == 'OK')\n            res = res.data\n\n          if(!res || !res.status || res.status != 'ok'){\n            return hmt_client_processor._respond(err, res, cb);\n          }\n\n\t\t\t\t\tme._get_fullsteam_auth_key(function(err, authentication_key_res) {\n\t\t\t\t\t\tvar env_key = null;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tauthentication_key_res &&\n\t\t\t\t\t\t\tauthentication_key_res.status &&\n\t\t\t\t\t\t\tauthentication_key_res.status == 'ok' &&\n\t\t\t\t\t\t\tauthentication_key_res.authenticationKey\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\tenv_key = authentication_key_res.authenticationKey;\n\n\n\t\t\t\t\t\tif (!env_key) return;\n\n            if(!data.zip && card.payment_method.credit_card.zip)\n              data.zip = card.payment_method.credit_card.zip\n\n\n\t\t\t\t\t\tme._get_fullsteam_token(card, data, env_key, function(err, token_res) {\n\t\t\t\t\t\t\tif (!token_res || !token_res.isSuccessful || !token_res.token) return;\n\n\t\t\t\t\t\t\tvar card_data = card.payment_method.credit_card\n\t\t\t\t\t\t\t\t? me._format_card_for_save(card.payment_method.credit_card)\n\t\t\t\t\t\t\t\t: null;\n\n\t\t\t\t\t\t\tvar data = {\n\t\t\t\t\t\t\t\tvault: 'fullsteam',\n\t\t\t\t\t\t\t\ttoken: token_res.token,\n\t\t\t\t\t\t\t\tcard_data: card_data\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tme._request({\n\t\t\t\t\t\t\t\turl: me.url_prefix('public/users/save_additional_card'),\n\t\t\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\t\t\twithCredentials: false,\n\t\t\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\t\t\tform_encoded: true,\n\t\t\t\t\t\t\t\tcb: function(err, res) {\n\t\t\t\t\t\t\t\t\tconsole.log('err,res', err, res);\n\t\t\t\t\t\t\t\t\thmt_client_processor._respond(err, res, cb);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n  _save_card_to_webuser: function(args){\n    var me = this\n\n    console.log(\"ARGS\", args)\n\n    me._remember_card_data(args)\n\n    var card_data = me.card_data ? me._format_card_for_save(me.card_data) : null\n\n    if(me.card_ticket_key && card_data && me.card_token && me.card_processor){\n      console.log('card_data checks PASSED', card_data)\n\n      var data = {\n        ticket_key: me.card_ticket_key,\n        vault: me.card_processor,\n        token: me.card_token,\n        card_data: card_data\n      }\n\n      this._request({\n        url: me.url_prefix('public/orders/save_additional_card'),\n        type: 'POST',\n        withCredentials: false,\n        data: data,\n        form_encoded: true,\n        cb: function(err, res){\n          console.log('err,res', err, res)\n          // hmt_client_processor._respond(err, res, cb)\n        }\n      })\n    }\n\n  },\n\n  _format_card_for_save: function(card_data){\n    var me = this\n    console.log(\"card_data\", card_data)\n    \n    if(!card_data.full_name)\n      return false\n    if(!card_data.month)\n      return false\n    if(!card_data.year)\n      return false\n    if(!card_data.number)\n      return false\n\n    return {\n      full_name : card_data.full_name,\n      last_four : me._get_last_four(card_data.number),\n      exp_month : card_data.month,\n      exp_year : card_data.year,\n    }\n  },\n\n  _get_last_four: function(cc_num){\n    return cc_num.substr(cc_num.length - 4)\n  },\n\n  _remember_card_data: function(args){\n    var me = this\n\n    if(args.card)\n      me.card_data = args.card\n    if(args.token)\n      me.card_token = args.token\n    if(args.processor)\n      me.card_processor = args.processor\n    if(args.ticket_key)\n      me.card_ticket_key = args.ticket_key\n  },\n\n  _remove_card_data: function(){\n    var me = this\n\n    delete me.card_data\n    delete me.card_token\n    delete me.processor\n    delete me.card_ticket_key\n  },\n  \n  _get_fullsteam_auth_key: function(cb){\n    \n    this._request({\n      url: this.url_prefix('shop/processors/get_authentication_key'),\n      cb: function(err, res){\n        hmt_client_processor._respond(err, res, cb)\n      }\n    })\n    \n  },\n\n  _get_fullsteam_token: function(card, transaction, auth_key, cb){\n    console.log('TRANSACTION', transaction)\n    if(\n      !card || \n      !card.payment_method || \n      !card.payment_method.credit_card || \n      !card.payment_method.credit_card.number || \n      !card.payment_method.credit_card.month || \n      !card.payment_method.credit_card.year || \n      !card.payment_method.credit_card.full_name || \n      !card.payment_method.credit_card.verification_value\n    ){\n      cb(true, 'Missing required card inputs')\n      return\n    }\n    \n    var data = {\n      \"clearTextCardData\": {\n        \"cardNumber\": card.payment_method.credit_card.number.replace(/\\s/g, ''),\n        \"cvv\": card.payment_method.credit_card.verification_value,\n        \"expirationMonth\": card.payment_method.credit_card.month,\n        \"expirationYear\": card.payment_method.credit_card.year,\n        \"billingInformation\": {\n          \"nameOnAccount\": card.payment_method.credit_card.full_name,\n          // \"businessName\": \"string\",\n          \"firstName\": transaction.f_name || null,\n          \"lastName\": transaction.l_name || null,\n          // \"middleName\": \"string\",\n          \"address1\": transaction.address1 || null,\n          \"address2\": transaction.address2 || null,\n          // \"address3\": \"string\",\n          \"city\": transaction.city || null,\n          \"state\": transaction.state || null,\n          \"zip\": transaction.zip || null,\n        //   \"country\": \"string\",\n          \"phone\": transaction.phone || null,\n        //   \"phoneCountryCode\": 0,\n          \"email\": transaction.email || null,\n        }\n      },\n      \"cardEntryContext\": this.app_type == 'box' ? 1 : 5,\n      \"performAccountVerification\": true\n    }\n    \n    this._request({\n      url: this.fullsteam_url() + 'api/token/card/clearText/create',\n      type: 'POST',\n      cors: true,\n      crossdomain: true,\n      data: data,\n      json: true,\n      withCredentials: false,\n      auth_key: auth_key,\n      cb: function(err, res){\n        hmt_client_processor._respond(err, res, cb)\n      }      \n    })\n\n  },\n  \n  _submit_fullsteam_transaction: function(transaction, cb){\n    \n    this._request({\n      url: this.url_prefix('shop/carts/submit'),\n      type: 'POST',\n      data: transaction,\n      form_encoded: true,\n      withCredentials: true,\n      cb: function(err, json){\n        hmt_client_processor._respond(err, json, cb)\n      }\n    })\n    \n  },\n  \n  _request: function(opts){\n\n    // default\n    var headers = {}\n    \n    if(opts.json)\n      headers['content-type'] = 'application/json;charset=UTF-8'\n    \n    if(opts.form_encoded){\n      headers['content-type'] = 'application/x-www-form-urlencoded;charset=UTF-8'\n      opts.data = hmt_client_processor._serialize(opts.data)\n    }\n\n    if(opts.auth_key)\n      headers['authenticationKey'] = opts.auth_key\n\n    axios__WEBPACK_IMPORTED_MODULE_0___default()({\n      method: opts.type || 'GET',\n      url: opts.url,\n      mode: 'no-cors',\n      credentials: 'same-origin',\n      headers: headers,\n      withCredentials: opts.withCredentials || false,\n      crossdomain: opts.crossdomain || false,\n      data: opts.data\n    }).then(function(response){\n      \n      if(opts.cb)\n        opts.cb(null, response)\n      \n    }).catch(function(error, res){\n\n      var error_msg = hmt_client_processor._format_error(error)\n      if(!res)\n        res = {}\n\n      res.msg = error_msg\n\n      if(opts.cb)\n        opts.cb(error, res)\n      \n    });\n    \n  },\n\n  _format_error: function(error) {\n    if(this.current_processor == 'spreedly'){\n      return this._format_spreedly_error(error)\n    } else {\n      return this._format_fullsteam_error(error)\n    }\n  },\n\n  _format_spreedly_error: function(error){\n    var res = null;\n    if(error.response && error.response.data && error.response.data.errors) {\n      var error_msg = 'Processing Error:<br>';\n      for(var i =0; i < error.response.data.errors.length; i++ ){\n        var err = error.response.data.errors[i]\n        error_msg += err.message ? '- '+err.message+\"<br>\" : ''\n      }\n      return error_msg\n    }\n\n    return 'Unkown error'\n\n  },\n\n  _format_fullsteam_error: function(error){\n    return error && error.msg ? error.msg : 'Unkown error'\n  },\n  \n  _handle_fullsteam_error: function(res, cb){\n    \n    var msg = ''\n    \n    if(res && res.responseDetails){\n      for(key in res.responseDetails)\n        msg += res.responseDetails[key].message+\"\\n\\n\"\n    }\n    \n    return hmt_client_processor._throw_error(true, {msg: msg}, cb)\n    \n  },\n  \n  _respond: function(err, res, cb){\n    \n    if(err || !res || !res.data || res.status == 'error'){\n      hmt_client_processor._throw_error(err, res, cb)\n      return\n    }\n\n    if(cb)\n      cb(null, res.data)\n    \n  },\n  \n  _throw_error: function(err, res, cb){\n        \n    if(!err && res.msg)\n      err = res.msg\n    \n    if(!err)\n      err = true\n    \n    if(cb)\n      cb(err, res)\n    \n  },\n  \n  _serialize: function(obj) {\n    \n    var str = [], p, prefix;\n    for (p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        var k = prefix ? prefix + \"[\" + p + \"]\" : p,\n          v = obj[p];\n        str.push((v !== null && typeof v === \"object\") ?\n          hmt_client_processor._serialize(v, k) :\n          encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n      }\n    }\n    return str.join(\"&\");\n    \n  }\n  \n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (hmt_client_processor);\n\n//# sourceURL=webpack://hmt_client_processor/./src/hmt-client-processor.js?");

/***/ }),

/***/ "axios":
/*!**************************************************************************************!*\
  !*** external {"commonjs":"axios","commonjs2":"axios","amd":"axios","root":"axios"} ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_axios__;\n\n//# sourceURL=webpack://hmt_client_processor/external_%7B%22commonjs%22:%22axios%22,%22commonjs2%22:%22axios%22,%22amd%22:%22axios%22,%22root%22:%22axios%22%7D?");

/***/ })

/******/ })["default"];
});