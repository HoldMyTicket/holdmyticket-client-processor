/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("qs"));
	else if(typeof define === 'function' && define.amd)
		define(["qs"], factory);
	else if(typeof exports === 'object')
		exports["hmt_client_processor"] = factory(require("qs"));
	else
		root["hmt_client_processor"] = factory(root["Qs"]);
})(self, (__WEBPACK_EXTERNAL_MODULE_qs__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./build/hmtclientprocessor.min.js":
/*!*****************************************!*\
  !*** ./build/hmtclientprocessor.min.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/typeof.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _qs = _interopRequireDefault(__webpack_require__(/*! qs */ \"qs\"));\nvar _fullsteamCodes = __webpack_require__(/*! ../src/fullsteamCodes/fullsteamCodes */ \"./src/fullsteamCodes/fullsteamCodes.js\");\nvar hmt_client_processor = function hmt_client_processor(settings) {\n  this.api_url = settings.api_url || ''; // set when the script is loaded\n  this.api_url_suffix = settings.api_url_suffix || ''; // set when the script is loaded\n  this.env = settings.env || ''; // set when the script is loaded\n  this.app_type = settings.app_type || ''; // set prior to submit (online | box)\n  this.isHmtMobile = settings.isHmtMobile || false;\n  this.auth = settings.app_type == 'box' && settings.auth || '';\n  this.spreedly_environment_key = settings.spreedly_environment_key || '';\n  this.charge_workers = settings.charge_workers || false;\n  this.captcha_token = settings.captcha_token || false;\n  this.errors_internal = []; // errors to handle internally\n  this.errors_processing = []; // errors to send back to clients regarding processing status\n\n  this.country_codes = {\n    '2': 'US',\n    '3': 'AI',\n    '4': 'AR',\n    '5': 'AU',\n    '6': 'AT',\n    '7': 'BE',\n    '8': 'BR',\n    '9': 'CA',\n    '10': 'CL',\n    '11': 'C2',\n    '12': 'CR',\n    '13': 'CY',\n    '14': 'CZ',\n    '15': 'DK',\n    '16': 'DO',\n    '17': 'EC',\n    '18': 'EE',\n    '19': 'FI',\n    '20': 'FR',\n    '21': 'DE',\n    '22': 'GR',\n    '23': 'HK',\n    '24': 'HU',\n    '25': 'IS',\n    '26': 'IN',\n    '27': 'IE',\n    '28': 'IL',\n    '29': 'IT',\n    '30': 'JM',\n    '31': 'JP',\n    '32': 'LV',\n    '33': 'LT',\n    '34': 'LU',\n    '35': 'MY',\n    '36': 'MT',\n    '37': 'MX',\n    '38': 'NL',\n    '39': 'NZ',\n    '40': 'NO',\n    '41': 'PL',\n    '42': 'PT',\n    '43': 'SG',\n    '44': 'SK',\n    '45': 'SI',\n    '46': 'ZA',\n    '47': 'KR',\n    '48': 'ES',\n    '49': 'SE',\n    '50': 'CH',\n    '51': 'TW',\n    '52': 'TH',\n    '53': 'TR',\n    '54': 'GB',\n    '55': 'UY',\n    '56': 'VE',\n    '57': 'PE',\n    '58': 'GT',\n    '59': 'SL',\n    '60': 'AL',\n    '61': 'DZ',\n    '62': 'AD',\n    '63': 'AO',\n    '64': 'AG',\n    '65': 'AM',\n    '66': 'AW',\n    '67': 'AZ',\n    '68': 'BS',\n    '69': 'BH',\n    '70': 'BB',\n    '71': 'BZ',\n    '72': 'BJ',\n    '73': 'BM',\n    '74': 'BT',\n    '75': 'BO',\n    '76': 'BA',\n    '77': 'BW',\n    '78': 'VG',\n    '79': 'BN',\n    '80': 'BG',\n    '81': 'BF',\n    '82': 'BI',\n    '83': 'KH',\n    '84': 'CV',\n    '85': 'KY',\n    '86': 'TD',\n    '87': 'CO',\n    '88': 'KM',\n    '89': 'CK',\n    '90': 'HR',\n    '91': 'CD',\n    '92': 'DJ',\n    '93': 'DM',\n    '94': 'SV',\n    '95': 'ER',\n    '96': 'ET',\n    '97': 'FK',\n    '98': 'FO',\n    '99': 'FM',\n    '100': 'FJ',\n    '101': 'GF',\n    '102': 'PF',\n    '103': 'GA',\n    '104': 'GM',\n    '105': 'GI',\n    '106': 'GL',\n    '107': 'GD',\n    '108': 'GP',\n    '109': 'GN',\n    '110': 'GW',\n    '111': 'GY',\n    '112': 'HN',\n    '113': 'ID',\n    '114': 'JO',\n    '115': 'KZ',\n    '116': 'KE',\n    '117': 'KI',\n    '118': 'KW',\n    '119': 'KG',\n    '120': 'LA',\n    '121': 'LS',\n    '122': 'LI',\n    '123': 'MG',\n    '124': 'MW',\n    '125': 'MV',\n    '126': 'ML',\n    '127': 'MH',\n    '128': 'MQ',\n    '129': 'MR',\n    '130': 'MU',\n    '131': 'YT',\n    '132': 'MN',\n    '133': 'MS',\n    '134': 'MA',\n    '135': 'MZ',\n    '136': 'NA',\n    '137': 'NR',\n    '138': 'NP',\n    '139': 'AN',\n    '140': 'NC',\n    '141': 'NI',\n    '142': 'NE',\n    '143': 'NU',\n    '144': 'NF',\n    '145': 'OM',\n    '146': 'PW',\n    '147': 'PA',\n    '148': 'PG',\n    '149': 'PH',\n    '150': 'PN',\n    '151': 'QA',\n    '152': 'CG',\n    '153': 'RE',\n    '154': 'RO',\n    '155': 'RU',\n    '156': 'RW',\n    '157': 'VC',\n    '158': 'WS',\n    '159': 'SM',\n    '160': 'ST',\n    '161': 'SA',\n    '162': 'SN',\n    '163': 'SC',\n    '164': 'SB',\n    '165': 'SO',\n    '166': 'LK',\n    '167': 'SH',\n    '168': 'KN',\n    '169': 'LC',\n    '170': 'PM',\n    '171': 'SR',\n    '172': 'SJ',\n    '173': 'SZ',\n    '174': 'TJ',\n    '175': 'TZ',\n    '176': 'TG',\n    '177': 'TO',\n    '178': 'TT',\n    '179': 'TN',\n    '180': 'TM',\n    '181': 'TC',\n    '182': 'TV',\n    '183': 'UG',\n    '184': 'UA',\n    '185': 'AE',\n    '186': 'VU',\n    '187': 'VA',\n    '188': 'VN',\n    '189': 'WF',\n    '190': 'YE',\n    '191': 'ZM'\n  };\n  this.url = function (endpoint, use_suffix) {\n    return this.api_url + endpoint + (use_suffix ? this.api_url_suffix : '');\n  };\n  this.spreedly_url = function (spreedly_environment_key) {\n    return 'https://core.spreedly.com/v1/payment_methods.json?environment_key=' + spreedly_environment_key;\n  };\n  this.fullsteam_url = function () {\n    return 'https://api' + (this.env == 'local' || this.env == 'dev' || this.env == 'staging' ? '-ext' : '') + '.fullsteampay.net/';\n  };\n  this.auth_key_url = function () {\n    return 'shop/processors/get_authentication_key';\n  };\n  this.authnet_token_url = function () {\n    return 'https://' + (this.env == 'local' || this.env == 'dev' || this.env == 'staging' ? 'apitest.authorize.net' : 'api2.authorize.net') + '/xml/v1/request.api';\n  };\n\n  /*\n  PUBLIC FUNCTIONS\n  */\n\n  // main function that the client will call to submit transactions\n  this.submit_transaction = function (card, transaction, cb) {\n    var _this = this;\n    this._clear_state();\n    transaction = this._prepare_transaction(transaction);\n    var response = function response(result, cb, transaction) {\n      var error = !result ? true : false;\n      var res = result ? result : {\n        status: 'error',\n        errors: _this.errors_processing\n      };\n\n      // just pass back the cb_data here, and not everywhere else\n      if (transaction.cb_data) res.cb_data = transaction.cb_data;\n\n      // log the bad response here\n      if (error) _this._log_bad_trans(transaction);\n      _this._respond(error, res, cb);\n    };\n\n    // determine the method to use spreedly | fullsteam | authnet\n    if (transaction.processor_method == 'spreedly') {\n      this._submit_spreedly(card, transaction, cb).then(function (result) {\n        response(result, cb, transaction);\n      });\n    } else if (transaction.processor_method == 'fullsteam') {\n      this._submit_fullsteam(card, transaction, cb).then(function (result) {\n        response(result, cb, transaction);\n      });\n    } else if (transaction.processor_method == 'authnet') {\n      this._submit_authnet(card, transaction, cb).then(function (result) {\n        response(result, cb, transaction);\n      });\n    } else {\n      this._add_internal_error('No processing method setup');\n      response(false, cb, transaction);\n    }\n  };\n\n  // public fn, calling internal so internal can be async\n  this.save_card = function (card, transaction, processor, ticket_key) {\n    this._save_card(card, transaction, processor, ticket_key);\n  };\n  this.webuser_save_card = function (card, data, webuser_id, cb) {\n    this._webuser_save_card(card, data, webuser_id, cb);\n  };\n\n  /*\n  PRIVATE FUNCTIONS\n  */\n\n  /* SPREEDLY */\n\n  this._get_spreedly_env_key = function () {\n    if (this.spreedly_environment_key) return this.spreedly_environment_key;\n    return '';\n  };\n  this._submit_spreedly = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(card, transaction) {\n      var token_res, transaction_res;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!transaction.payment_token) {\n              _context.next = 4;\n              break;\n            }\n            _context.next = 3;\n            return this._submit_spreedly_transaction(transaction);\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n          case 4:\n            _context.next = 6;\n            return this._get_spreedly_token(card, transaction.spreedly_environment_key);\n          case 6:\n            token_res = _context.sent;\n            if (!(!token_res || !token_res.transaction || !token_res.transaction.payment_method || !token_res.transaction.payment_method.token)) {\n              _context.next = 10;\n              break;\n            }\n            if (!token_res) {\n              this._add_processing_error('Unable to charge card. Please check Adblocker / Firewall settings and try again.');\n            }\n            return _context.abrupt(\"return\", this._add_internal_error('Spreedly, Could not get token'));\n          case 10:\n            transaction.payment_token = token_res.transaction.payment_method.token;\n            _context.next = 13;\n            return this._submit_spreedly_transaction(transaction);\n          case 13:\n            transaction_res = _context.sent;\n            if (transaction_res && transaction_res.ticket_key) this._save_card_to_webuser({\n              ticket_key: transaction_res.ticket_key\n            });\n            if (transaction.cc_retain && transaction.cc_retain == 'y') this._save_card(card, transaction, 'fullsteam');\n            return _context.abrupt(\"return\", transaction_res);\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this);\n    }));\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  this._get_spreedly_token = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(card, spreedly_environment_key, cb) {\n      var token, key;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return this._request({\n              url: this.spreedly_url(spreedly_environment_key),\n              type: 'POST',\n              withCredentials: false,\n              json: true,\n              data: card\n            });\n          case 2:\n            token = _context2.sent;\n            if (token.errors && token.errors.length > 0) {\n              for (key in token.errors) this._add_processing_error(token.errors[key].message);\n            }\n            return _context2.abrupt(\"return\", token);\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, this);\n    }));\n    return function (_x3, _x4, _x5) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  this._submit_spreedly_transaction = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(transaction, cb) {\n      var create_charge_worker_res, transaction_res;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (transaction.payments) transaction.payments = this._update_payments_token(transaction.payments, transaction.payment_token);\n            transaction = this._remove_sensitive_card_data(transaction);\n            if (!this.charge_workers) {\n              _context3.next = 13;\n              break;\n            }\n            _context3.next = 5;\n            return this._request({\n              url: this.url('shop/carts/create_charge_worker', true),\n              type: 'POST',\n              data: transaction,\n              form_encoded: true,\n              withCredentials: true\n            });\n          case 5:\n            create_charge_worker_res = _context3.sent;\n            if (!(create_charge_worker_res.status == 'error')) {\n              _context3.next = 8;\n              break;\n            }\n            return _context3.abrupt(\"return\", this._add_processing_error('There was an error processing your transaction.'));\n          case 8:\n            _context3.next = 10;\n            return this._check_charge_worker(create_charge_worker_res.worker_reference);\n          case 10:\n            transaction_res = _context3.sent;\n            _context3.next = 16;\n            break;\n          case 13:\n            _context3.next = 15;\n            return this._request({\n              url: this.url('shop/carts/submit', true),\n              type: 'POST',\n              data: transaction,\n              form_encoded: true,\n              withCredentials: true\n            });\n          case 15:\n            transaction_res = _context3.sent;\n          case 16:\n            return _context3.abrupt(\"return\", transaction_res);\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, this);\n    }));\n    return function (_x6, _x7) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  /* FULLSTEAM */\n\n  this._submit_fullsteam = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(card, transaction, cb) {\n      var authentication_key_res, auth_key, token_res, transaction_res;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!transaction.payment_token) {\n              _context4.next = 4;\n              break;\n            }\n            _context4.next = 3;\n            return this._submit_fullsteam_transaction(transaction);\n          case 3:\n            return _context4.abrupt(\"return\", _context4.sent);\n          case 4:\n            _context4.next = 6;\n            return this._get_auth_key();\n          case 6:\n            authentication_key_res = _context4.sent;\n            auth_key = null;\n            if (authentication_key_res && authentication_key_res.status && authentication_key_res.status == 'ok' && authentication_key_res.authenticationKey) auth_key = authentication_key_res.authenticationKey;\n            if (auth_key) {\n              _context4.next = 12;\n              break;\n            }\n            this._add_processing_error(authentication_key_res.msg || 'Processor error (Code: CP10001)');\n            return _context4.abrupt(\"return\", false);\n          case 12:\n            _context4.next = 14;\n            return this._get_fullsteam_token(card, transaction, auth_key);\n          case 14:\n            token_res = _context4.sent;\n            if (!(!token_res || !token_res.isSuccessful)) {\n              _context4.next = 17;\n              break;\n            }\n            return _context4.abrupt(\"return\", false);\n          case 17:\n            transaction.payment_token = token_res.token;\n            _context4.next = 20;\n            return this._submit_fullsteam_transaction(transaction);\n          case 20:\n            transaction_res = _context4.sent;\n            if (transaction_res && transaction_res.ticket_key) this._save_card_to_webuser({\n              ticket_key: transaction_res.ticket_key\n            });\n            if (transaction.cc_retain && transaction.cc_retain == 'y') {\n              if (!transaction.spreedly_environment_key) transaction.spreedly_environment_key = this._get_spreedly_env_key();\n              this._save_card(card, transaction, 'spreedly');\n            }\n            return _context4.abrupt(\"return\", transaction_res);\n          case 24:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, this);\n    }));\n    return function (_x8, _x9, _x10) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  this._get_auth_key = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(transaction) {\n      var processor_hash, params, token_res;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            //hit HMT servers to get a public key used for obtaining card token\n            processor_hash = transaction && transaction.processor_hash ? transaction.processor_hash : '';\n            params = {};\n            if (this.captcha_token) params.captcha_token = this.captcha_token;\n            if (processor_hash) params.processor_hash = processor_hash;\n            _context5.next = 6;\n            return this._request({\n              url: this.url(this.auth_key_url(), true) + (params ? '?' + _qs[\"default\"].stringify(params) : ''),\n              withCredentials: true\n            });\n          case 6:\n            token_res = _context5.sent;\n            return _context5.abrupt(\"return\", token_res);\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, this);\n    }));\n    return function (_x11) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  this._get_fullsteam_token = /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(card, transaction, auth_key, cb) {\n      var data, res, msg, avsResponseCode, CVVResponseCode, responseError;\n      return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!(!card || !card.payment_method || !card.payment_method.credit_card || !card.payment_method.credit_card.number || !card.payment_method.credit_card.month || !card.payment_method.credit_card.year || !card.payment_method.credit_card.full_name || !card.payment_method.credit_card.verification_value)) {\n              _context6.next = 3;\n              break;\n            }\n            this._add_processing_error('Missing required card inputs');\n            return _context6.abrupt(\"return\", false);\n          case 3:\n            data = {\n              \"clearTextCardData\": {\n                \"cardNumber\": card.payment_method.credit_card.number.replace(/\\s/g, ''),\n                \"cvv\": card.payment_method.credit_card.verification_value,\n                \"expirationMonth\": card.payment_method.credit_card.month,\n                \"expirationYear\": card.payment_method.credit_card.year,\n                \"billingInformation\": {\n                  \"nameOnAccount\": card.payment_method.credit_card.full_name,\n                  \"firstName\": transaction.f_name || null,\n                  \"lastName\": transaction.l_name || null,\n                  \"address1\": transaction.address1 || null,\n                  \"address2\": transaction.address2 || null,\n                  \"city\": transaction.city || null,\n                  \"state\": transaction.state || null,\n                  \"zip\": transaction.zip || (this.app_type == 'box' ? '00000' : null),\n                  \"country\": this._get_fullsteam_contry_code(transaction),\n                  \"phone\": transaction.phone || null,\n                  \"email\": transaction.email1 || null\n                }\n              },\n              \"cardEntryContext\": this.app_type == 'box' ? 7 : 5,\n              \"performAccountVerification\": true\n            };\n            if (transaction.country_id && transaction.country_id != '2') delete data.clearTextCardData.billingInformation.state;\n            _context6.next = 7;\n            return this._request({\n              url: this.fullsteam_url() + 'api/token/card/clearText/create',\n              type: 'POST',\n              cors: true,\n              crossdomain: true,\n              data: data,\n              json: true,\n              withCredentials: false,\n              auth_key: auth_key\n            });\n          case 7:\n            res = _context6.sent;\n            if (!(!res || !res.isSuccessful)) {\n              _context6.next = 15;\n              break;\n            }\n            this._add_internal_error(\"Fullsteam, Could not get token\");\n            msg = \"\";\n            if (res && res.issuerResponseDetails) {\n              avsResponseCode = res.issuerResponseDetails.avsResponseCode || \"\";\n              CVVResponseCode = res.issuerResponseDetails.cvvResponseCode || \"\";\n              responseError = res.responseCode || \"\";\n              if (responseError == 160 || res.responseCode == 161) {\n                msg = \"Card Declined: Address Error -\" + this.check_fullsteam_codes(_fullsteamCodes.AVS_response_codes, avsResponseCode, msg);\n              } else if (responseError == 162) {\n                msg = \"Card Declined: CVV Error - \" + this.check_fullsteam_codes(_fullsteamCodes.CVV_response_codes, CVVResponseCode, msg);\n              } else if (responseError != 0) {\n                msg = \"Card Declined: \" + this.check_fullsteam_codes(_fullsteamCodes.responseCodes, responseError, msg);\n              } else {\n                msg = \"Card Declined: An error has occurred, please check that all the information entered is correct and resubmit. If this issue persists please contact HoldMyTicket.\";\n              }\n            }\n            if (msg == \"\" && this.errors_processing.length == 0) msg = \"Unable to charge card. Please check Adblocker / Firewall settings and try again.\"; // CPE4 ERROR\n\n            this._add_processing_error(msg);\n            return _context6.abrupt(\"return\", false);\n          case 15:\n            return _context6.abrupt(\"return\", res);\n          case 16:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, this);\n    }));\n    return function (_x12, _x13, _x14, _x15) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  this._submit_fullsteam_transaction = /*#__PURE__*/function () {\n    var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(transaction, cb) {\n      var create_charge_worker_res, transaction_res;\n      return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            if (transaction.payments) transaction.payments = this._update_payments_token(transaction.payments, transaction.payment_token);\n            transaction = this._remove_sensitive_card_data(transaction);\n            if (!this.charge_workers) {\n              _context7.next = 13;\n              break;\n            }\n            _context7.next = 5;\n            return this._request({\n              url: this.url('shop/carts/create_charge_worker', true),\n              type: 'POST',\n              data: transaction,\n              form_encoded: true,\n              withCredentials: true\n            });\n          case 5:\n            create_charge_worker_res = _context7.sent;\n            if (!(create_charge_worker_res.status == 'error')) {\n              _context7.next = 8;\n              break;\n            }\n            return _context7.abrupt(\"return\", this._add_processing_error('There was an error processing your transaction.'));\n          case 8:\n            _context7.next = 10;\n            return this._check_charge_worker(create_charge_worker_res.worker_reference);\n          case 10:\n            transaction_res = _context7.sent;\n            _context7.next = 16;\n            break;\n          case 13:\n            _context7.next = 15;\n            return this._request({\n              url: this.url('shop/carts/submit', true),\n              type: 'POST',\n              data: transaction,\n              form_encoded: true,\n              withCredentials: true\n            });\n          case 15:\n            transaction_res = _context7.sent;\n          case 16:\n            return _context7.abrupt(\"return\", transaction_res);\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7, this);\n    }));\n    return function (_x16, _x17) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  this._get_fullsteam_contry_code = function (transaction) {\n    //country_id from HMT. return intnl country_code\n\n    var hmt_country_id = transaction.country_id || '2';\n    if (this.country_codes && this.country_codes[hmt_country_id]) return this.country_codes[hmt_country_id];\n    return 'US';\n  };\n\n  /* AUTHNET */\n  this._submit_authnet = /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(card, transaction, cb) {\n      var authentication_key_res, token_res, transaction_res;\n      return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            //This data\n            transaction.card_data = {\n              full_name: card.payment_method.credit_card.full_name,\n              month: card.payment_method.credit_card.month,\n              year: card.payment_method.credit_card.year\n            };\n\n            // saved payment tokens can be submitted without needing to create a token, simply submit payment token\n            if (!transaction.payment_token) {\n              _context8.next = 5;\n              break;\n            }\n            _context8.next = 4;\n            return this._submit_authnet_transaction(transaction);\n          case 4:\n            return _context8.abrupt(\"return\", _context8.sent);\n          case 5:\n            _context8.next = 7;\n            return this._get_auth_key(transaction);\n          case 7:\n            authentication_key_res = _context8.sent;\n            if (!(!authentication_key_res.status || authentication_key_res.status != 'ok' || !authentication_key_res.auth_key)) {\n              _context8.next = 10;\n              break;\n            }\n            return _context8.abrupt(\"return\", {\n              status: 'error',\n              msg: authentication_key_res.msg || 'An error has occurred. Please try again.',\n              code: authentication_key_res.code || 0\n            });\n          case 10:\n            _context8.next = 12;\n            return this._get_authnet_token(card, transaction, authentication_key_res);\n          case 12:\n            token_res = _context8.sent;\n            if (this._is_valid_authnet_response(token_res)) {\n              _context8.next = 15;\n              break;\n            }\n            return _context8.abrupt(\"return\", false);\n          case 15:\n            if (!(!token_res || !token_res.opaqueData || !token_res.opaqueData.dataValue)) {\n              _context8.next = 18;\n              break;\n            }\n            this._add_processing_error('Valid response data could not be found. Please try again.');\n            return _context8.abrupt(\"return\", false);\n          case 18:\n            transaction.payment_token = token_res.opaqueData.dataValue;\n            _context8.next = 21;\n            return this._submit_authnet_transaction(transaction);\n          case 21:\n            transaction_res = _context8.sent;\n            return _context8.abrupt(\"return\", transaction_res);\n          case 23:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8, this);\n    }));\n    return function (_x18, _x19, _x20) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  this._is_valid_authnet_response = function (response) {\n    if (!response.messages || !response.messages.resultCode) {\n      this._add_processing_error('An unknown error has occurred. Please try again');\n      return false;\n    }\n    if (response.messages.resultCode === 'Error') {\n      for (var i = 0; i < response.messages.message.length; i++) this._add_processing_error(response.messages.message[i].text);\n      return false;\n    }\n    return true;\n  };\n  this._get_authnet_token = /*#__PURE__*/function () {\n    var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(card, transaction, auth, cb) {\n      var authData, cardData, anet_url, post_data, token_res;\n      return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            if (!(!card || !card.payment_method || !card.payment_method.credit_card || !card.payment_method.credit_card.number || !card.payment_method.credit_card.month || !card.payment_method.credit_card.year || !card.payment_method.credit_card.full_name || !card.payment_method.credit_card.verification_value)) {\n              _context9.next = 3;\n              break;\n            }\n            this._add_processing_error('Missing required card inputs');\n            return _context9.abrupt(\"return\", false);\n          case 3:\n            //Careful here - the ORDER of the variables is important to auth.net\n            authData = {};\n            authData.name = auth.auth_user;\n            authData.clientKey = auth.auth_key;\n            cardData = {};\n            cardData.cardNumber = card.payment_method.credit_card.number.replace(/\\s/g, '');\n            cardData.expirationDate = this._get_authnet_expiration(card.payment_method.credit_card);\n            cardData.cardCode = card.payment_method.credit_card.verification_value;\n            if (card.payment_method.credit_card.zip) cardData.zip = card.payment_method.credit_card.zip;\n            cardData.fullName = card.payment_method.credit_card.full_name;\n            anet_url = this.authnet_token_url();\n            post_data = {\n              'securePaymentContainerRequest': {\n                'merchantAuthentication': authData,\n                'data': {\n                  'type': 'TOKEN',\n                  'id': 'hmt_' + this.random_id(),\n                  'token': cardData\n                }\n              }\n            };\n            _context9.next = 16;\n            return this._request({\n              url: anet_url,\n              type: 'POST',\n              data: post_data,\n              json: true,\n              form_encoded: false,\n              withCredentials: false,\n              remote_url: true\n            });\n          case 16:\n            token_res = _context9.sent;\n            return _context9.abrupt(\"return\", token_res);\n          case 18:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9, this);\n    }));\n    return function (_x21, _x22, _x23, _x24) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  this._get_authnet_expiration = function (card) {\n    return (card.month.length == 1 ? '0' : '') + card.month + (card.year.length == 2 ? '20' : '') + card.year;\n  };\n  this.random_id = function () {\n    var res = '';\n    var arr = '1234567890';\n    for (var i = 16; i > 0; i--) {\n      res += arr[Math.floor(Math.random() * arr.length)];\n    }\n    return res;\n  };\n  this._submit_authnet_transaction = /*#__PURE__*/function () {\n    var _ref10 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(transaction, cb) {\n      var create_charge_worker_res, transaction_res;\n      return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            if (transaction.payments) transaction.payments = this._update_payments_token(transaction.payments, transaction.payment_token);\n            transaction = this._remove_sensitive_card_data(transaction);\n            if (!this.charge_workers) {\n              _context10.next = 13;\n              break;\n            }\n            _context10.next = 5;\n            return this._request({\n              url: this.url('shop/carts/create_charge_worker', true),\n              type: 'POST',\n              data: transaction,\n              form_encoded: true,\n              withCredentials: true\n            });\n          case 5:\n            create_charge_worker_res = _context10.sent;\n            if (!(create_charge_worker_res.status == 'error')) {\n              _context10.next = 8;\n              break;\n            }\n            return _context10.abrupt(\"return\", this._add_processing_error('There was an error processing your transaction.'));\n          case 8:\n            _context10.next = 10;\n            return this._check_charge_worker(create_charge_worker_res.worker_reference);\n          case 10:\n            transaction_res = _context10.sent;\n            _context10.next = 16;\n            break;\n          case 13:\n            _context10.next = 15;\n            return this._request({\n              url: this.url('shop/carts/submit', true),\n              type: 'POST',\n              data: transaction,\n              form_encoded: true,\n              withCredentials: true\n            });\n          case 15:\n            transaction_res = _context10.sent;\n          case 16:\n            return _context10.abrupt(\"return\", transaction_res);\n          case 17:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10, this);\n    }));\n    return function (_x25, _x26) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  this._get_authnet_contry_code = function (transaction) {};\n\n  /* Card Saving Fns */\n\n  this._save_card = /*#__PURE__*/function () {\n    var _ref11 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(card, transaction, processor, ticket_key) {\n      var card_data, args, token_res, authentication_key_res, env_key, _token_res;\n      return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            if (!(!card || !card.payment_method || !card.payment_method.credit_card)) {\n              _context11.next = 2;\n              break;\n            }\n            return _context11.abrupt(\"return\");\n          case 2:\n            card_data = card.payment_method.credit_card;\n            args = {\n              card: card_data,\n              processor: processor\n            };\n            ticket_key = ticket_key || '';\n            if (ticket_key) args.ticket_key = ticket_key;\n            if (!(processor == 'spreedly')) {\n              _context11.next = 14;\n              break;\n            }\n            _context11.next = 9;\n            return this._get_spreedly_token(card, transaction.spreedly_environment_key);\n          case 9:\n            token_res = _context11.sent;\n            if (token_res) {\n              _context11.next = 12;\n              break;\n            }\n            return _context11.abrupt(\"return\");\n          case 12:\n            if (token_res.transaction && token_res.transaction.payment_method && token_res.transaction.payment_method.token) args.token = token_res.transaction.payment_method.token;\n            this._save_card_to_webuser(args);\n          case 14:\n            if (!(processor == 'fullsteam')) {\n              _context11.next = 29;\n              break;\n            }\n            _context11.next = 17;\n            return this._get_auth_key();\n          case 17:\n            authentication_key_res = _context11.sent;\n            env_key = null;\n            if (authentication_key_res && authentication_key_res.status && authentication_key_res.status == 'ok' && authentication_key_res.authenticationKey) env_key = authentication_key_res.authenticationKey;\n            if (env_key) {\n              _context11.next = 22;\n              break;\n            }\n            return _context11.abrupt(\"return\");\n          case 22:\n            _context11.next = 24;\n            return this._get_fullsteam_token(card, transaction, env_key);\n          case 24:\n            _token_res = _context11.sent;\n            if (!(!_token_res || !_token_res.isSuccessful || !_token_res.token)) {\n              _context11.next = 27;\n              break;\n            }\n            return _context11.abrupt(\"return\");\n          case 27:\n            args.token = _token_res.token;\n            this._save_card_to_webuser(args);\n          case 29:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, _callee11, this);\n    }));\n    return function (_x27, _x28, _x29, _x30) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  this._save_card_to_webuser = /*#__PURE__*/function () {\n    var _ref12 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(args) {\n      var card_data, data, res;\n      return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n        while (1) switch (_context12.prev = _context12.next) {\n          case 0:\n            this._remember_card_data(args);\n            card_data = this.card_data ? this._format_card_for_save(this.card_data) : null;\n            if (!(this.card_ticket_key && card_data && this.card_token && this.card_processor)) {\n              _context12.next = 7;\n              break;\n            }\n            data = {\n              ticket_key: this.card_ticket_key,\n              vault: this.card_processor,\n              token: this.card_token,\n              card_data: card_data\n            };\n            _context12.next = 6;\n            return this._request({\n              url: this.url('public/orders/save_additional_card', false),\n              type: 'POST',\n              withCredentials: false,\n              data: data,\n              form_encoded: true\n            });\n          case 6:\n            res = _context12.sent;\n          case 7:\n          case \"end\":\n            return _context12.stop();\n        }\n      }, _callee12, this);\n    }));\n    return function (_x31) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n  this._webuser_save_card = /*#__PURE__*/function () {\n    var _ref13 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(card, data, webuser_id, cb) {\n      var res, spreedly_token_res, request_data, save_credit_card_res, authentication_key_res, env_key, fullsteam_token_res, card_data, additional_request_data, save_additional_card_res;\n      return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n        while (1) switch (_context13.prev = _context13.next) {\n          case 0:\n            res = {};\n            _context13.next = 3;\n            return this._get_spreedly_token(card, data.spreedly_environment_key);\n          case 3:\n            spreedly_token_res = _context13.sent;\n            if (!(!spreedly_token_res || !spreedly_token_res.transaction || !spreedly_token_res.transaction.payment_method || !spreedly_token_res.transaction.payment_method.token)) {\n              _context13.next = 8;\n              break;\n            }\n            if (!this.errors_processing && !this.errors_internal) this._add_internal_error('Spreedly, Could not get token');\n            this._respond(this.errors_processing, spreedly_token_res, cb);\n            return _context13.abrupt(\"return\");\n          case 8:\n            request_data = {\n              webuser_id: webuser_id,\n              token: spreedly_token_res.transaction.payment_method.token,\n              vault: 'spreedly'\n            };\n            if (data.ticket_key) request_data.ticket_key = data.ticket_key;\n            _context13.next = 12;\n            return this._request({\n              url: this.url('public/users/save_credit_card', false),\n              type: 'POST',\n              withCredentials: this.isHmtMobile ? true : false,\n              data: request_data,\n              form_encoded: true\n            });\n          case 12:\n            save_credit_card_res = _context13.sent;\n            if (save_credit_card_res && save_credit_card_res.status == 'ok' && save_credit_card_res.statusText == 'OK') res = save_credit_card_res; // this will be the successfull res!\n            if (!(!save_credit_card_res || !save_credit_card_res.status || save_credit_card_res.status != 'ok')) {\n              _context13.next = 19;\n              break;\n            }\n            if (save_credit_card_res && save_credit_card_res.msg) this._add_processing_error(save_credit_card_res.msg);\n            if (!this.errors_processing && !this.errors_internal) this._add_internal_error('Spreedly, Error saving credit card');\n            this._respond(this.errors_processing, spreedly_token_res, cb);\n            return _context13.abrupt(\"return\");\n          case 19:\n            _context13.next = 21;\n            return this._get_auth_key();\n          case 21:\n            authentication_key_res = _context13.sent;\n            env_key = null;\n            if (authentication_key_res && authentication_key_res.status && authentication_key_res.status == 'ok' && authentication_key_res.authenticationKey) env_key = authentication_key_res.authenticationKey;\n            if (env_key) {\n              _context13.next = 28;\n              break;\n            }\n            if (!this.errors_processing && !this.errors_internal) this._add_internal_error('Fullsteam, Could not get env_key');\n            this._respond(this.errors_processing, authentication_key_res, cb);\n            return _context13.abrupt(\"return\");\n          case 28:\n            if (!data.zip && card.payment_method.credit_card.zip) data.zip = card.payment_method.credit_card.zip;\n            _context13.next = 31;\n            return this._get_fullsteam_token(card, data, env_key);\n          case 31:\n            fullsteam_token_res = _context13.sent;\n            if (!(!fullsteam_token_res || !fullsteam_token_res.isSuccessful || !fullsteam_token_res.token)) {\n              _context13.next = 36;\n              break;\n            }\n            // _get_fullsteam_token throws internal error for: !fullsteam_token_res || !fullsteam_token_res.isSuccessful\n            if (fullsteam_token_res && !fullsteam_token_res.token)\n              // throw internal error when there is a fullsteam_token_res, but no token\n              this._add_internal_error('Fullsteam, Responded with no token');\n            this._respond(this.errors_processing, authentication_key_res, cb);\n            return _context13.abrupt(\"return\");\n          case 36:\n            card_data = card.payment_method.credit_card ? this._format_card_for_save(card.payment_method.credit_card) : null;\n            additional_request_data = {\n              webuser_id: webuser_id,\n              vault: 'fullsteam',\n              token: fullsteam_token_res.token,\n              card_data: card_data\n            };\n            if (data.ticket_key) additional_request_data.ticket_key = data.ticket_key;\n            _context13.next = 41;\n            return this._request({\n              url: this.url('public/users/save_additional_card', false),\n              type: 'POST',\n              withCredentials: this.isHmtMobile ? true : false,\n              data: additional_request_data,\n              form_encoded: true\n            });\n          case 41:\n            save_additional_card_res = _context13.sent;\n            if (!(!save_additional_card_res || !save_additional_card_res.status || save_additional_card_res.status != 'ok')) {\n              _context13.next = 46;\n              break;\n            }\n            //do not set error here - we will let if fail silently (we at least saved 1 vault)\n\n            if (!this.errors_processing && !this.errors_internal) this._add_internal_error('Fullsteam, Error saving additional credit card');\n            this._respond(this.errors_processing, save_credit_card_res, cb);\n            return _context13.abrupt(\"return\");\n          case 46:\n            this._respond(this.errors_processing, res, cb);\n          case 47:\n          case \"end\":\n            return _context13.stop();\n        }\n      }, _callee13, this);\n    }));\n    return function (_x32, _x33, _x34, _x35) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  /*\n  Utilities\n  */\n\n  this._check_charge_worker = /*#__PURE__*/function () {\n    var _ref14 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(worker_reference) {\n      var _this2 = this;\n      return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n        while (1) switch (_context15.prev = _context15.next) {\n          case 0:\n            return _context15.abrupt(\"return\", new Promise(function (resolve) {\n              var check_charge = /*#__PURE__*/function () {\n                var _ref15 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14() {\n                  var check_charge_worker_res;\n                  return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n                    while (1) switch (_context14.prev = _context14.next) {\n                      case 0:\n                        _context14.next = 2;\n                        return _this2._request({\n                          url: _this2.url('shop/carts/get_charge_worker_status/' + worker_reference, true),\n                          withCredentials: true\n                        });\n                      case 2:\n                        check_charge_worker_res = _context14.sent;\n                        if (check_charge_worker_res.status == 'ok' && (check_charge_worker_res.worker.status == 'waiting' || check_charge_worker_res.worker.status == 'running')) {\n                          setTimeout(check_charge, 5000);\n                        }\n                        if (check_charge_worker_res.status == 'ok' && check_charge_worker_res.worker.status == 'done') {\n                          resolve({\n                            status: 'ok',\n                            msg: 'Charge successful',\n                            ticket_key: check_charge_worker_res.worker.log.ticket_key\n                          });\n                        }\n                        if (check_charge_worker_res.status == 'ok' && check_charge_worker_res.worker.status == 'terminated') {\n                          resolve({\n                            status: 'error',\n                            msg: 'There was an error processing your transaction.'\n                          });\n                        }\n                        if (check_charge_worker_res.status == 'ok' && check_charge_worker_res.worker.status == 'error') {\n                          resolve({\n                            status: check_charge_worker_res.worker.log.status,\n                            msg: check_charge_worker_res.worker.log.msg\n                          });\n                        }\n                      case 7:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }, _callee14);\n                }));\n                return function check_charge() {\n                  return _ref15.apply(this, arguments);\n                };\n              }();\n              check_charge();\n            }));\n          case 1:\n          case \"end\":\n            return _context15.stop();\n        }\n      }, _callee15);\n    }));\n    return function (_x36) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n  this._update_payments_token = function (payments, payment_token) {\n    //for split payments we need the token\n    for (var i = 0; i < payments.length; i++) {\n      var payment = payments[i];\n      if (payment.type == 'credit') payments[i].payment_token = payment_token;\n    }\n    return payments;\n  };\n  this._format_card_for_save = function (card_data) {\n    if (!card_data.full_name) return false;\n    if (!card_data.month) return false;\n    if (!card_data.year) return false;\n    if (!card_data.number) return false;\n    return {\n      full_name: card_data.full_name,\n      last_four: this._get_last_four(card_data.number),\n      exp_month: card_data.month,\n      exp_year: card_data.year\n    };\n  };\n  this._format_phone_number = function (phone_number) {\n    // \\D stands for any non digit\n    return phone_number.replace(/\\D/g, '');\n  };\n  this._get_last_four = function (cc_num) {\n    return cc_num.substr(cc_num.length - 4);\n  };\n  this._remember_card_data = function (args) {\n    if (args.card) this.card_data = args.card;\n    if (args.token) this.card_token = args.token;\n    if (args.processor) this.card_processor = args.processor;\n    if (args.ticket_key) this.card_ticket_key = args.ticket_key;\n  };\n  this._clear_state = function () {\n    this.errors_internal = [];\n    this.errors_processing = [];\n    delete this.card_data;\n    delete this.card_token;\n    delete this.card_processor;\n    delete this.card_ticket_key;\n  };\n  this._remove_sensitive_card_data = function (data) {\n    delete data.cc_no;\n    delete data.cc_cvc;\n    delete data.cc_expiry;\n    delete data.cc_name;\n    delete data.encryptedTrack1;\n    delete data.encryptedTrack2;\n    delete data.ksn;\n    return data;\n  };\n\n  /*\n  Main Request Fn\n  */\n\n  this._request = /*#__PURE__*/function () {\n    var _ref16 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(opts) {\n      var _this3 = this;\n      return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n        while (1) switch (_context16.prev = _context16.next) {\n          case 0:\n            return _context16.abrupt(\"return\", new Promise(function (resolve, reject) {\n              // default\n              var headers = {};\n              if (opts.json) headers['content-type'] = 'application/json;charset=UTF-8';\n              if (opts.form_encoded) {\n                headers['content-type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n                if (opts.data.payments) {\n                  var payments = opts.data.payments;\n                  delete opts.data.payments;\n                  var stringifiedPostData = _this3._serializer(opts.data);\n                  var stringifiedPayments = _this3._serializer({\n                    payments: payments\n                  }, true);\n                  stringifiedPostData = stringifiedPostData + '&' + stringifiedPayments;\n                } else {\n                  var stringifiedPostData = _this3._serializer(opts.data);\n                }\n                opts.data = stringifiedPostData;\n              }\n              if (opts.auth_key) headers['authenticationKey'] = opts.auth_key;\n              var url = opts.url;\n              var data;\n              if (opts.data) data = opts.data;\n              if (_this3.auth && _this3.app_type == 'box' && (url.indexOf('submit') > -1 || url.indexOf('get_authentication_key') > -1)) {\n                url += (url.indexOf('?') > -1 ? '&' : '?') + 'auth=' + _this3.auth;\n                if ((0, _typeof2[\"default\"])(data) == 'object') data.can_handle_fullsteam = 'true';\n                if (typeof data == 'string') data += '&can_handle_fullsteam=true';\n              }\n              if (opts.remote_url) url = opts.url;else headers['processor-compat-ver'] = '1';\n              if (opts.json) data = JSON.stringify(data);\n\n              // build the xhr request\n              var xhr = new XMLHttpRequest();\n              xhr.open(opts.type || 'GET', url);\n              xhr.withCredentials = opts.withCredentials || false;\n              for (var key in headers) xhr.setRequestHeader(key, headers[key]);\n              xhr.onreadystatechange = function (evt) {\n                if (xhr.readyState === 4) {\n                  _this3._logger(url, data, xhr, opts);\n                  if (xhr.status && xhr.status >= 200 && xhr.status <= 299) resolve(_this3._xhr_success(xhr));else resolve(_this3._xhr_fail(xhr, url));\n                }\n              };\n              xhr.send(data);\n            }));\n          case 1:\n          case \"end\":\n            return _context16.stop();\n        }\n      }, _callee16);\n    }));\n    return function (_x37) {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  /*\n  Request Responses\n  */\n\n  this._xhr_success = function (xhr) {\n    var res = {};\n    try {\n      res = JSON.parse(xhr.responseText);\n    } catch (error) {\n      console.error('could not parse the response to json');\n    }\n\n    // attempt to set statusText\n    if (xhr.statusText) res.statusText = xhr.statusText;\n\n    // react native seems to have a bug where the statusText comes through as undefined\n    // to get around it we'll set the prop manually for status 200 so we can pass any checks for it in the lib\n    if (this.isHmtMobile && !res.statusText) res.statusText = 'OK';\n    return res;\n  };\n  this._xhr_fail = function (xhr, url) {\n    // var error = null\n\n    // try {\n    //   error = JSON.parse(xhr.response)\n    // } catch(error) {\n    //   console.log('could not parse error response')\n    // }\n\n    var res = {};\n    try {\n      res = JSON.parse(xhr.responseText);\n    } catch (error) {\n      console.error('xhr error', error);\n      console.error('could not parse the response to json', xhr);\n    }\n    if (!res.status && res.status !== 'error') res.status = 'error';\n    res.statusText = xhr.statusText ? xhr.statusText : 'ERROR';\n    return res;\n  };\n  this._respond = function (err, res, cb) {\n    if (err || !res || res.status == 'error') {\n      this._throw_error(err, res, cb);\n      return;\n    }\n    if (cb) {\n      if (res.data) {\n        cb(null, res.data);\n      } else {\n        cb(null, res);\n      }\n    }\n  };\n  this._throw_error = function (err, res, cb) {\n    if (!err && res.msg) err = res.msg;\n    if (!err) err = true;\n    if (cb) cb(err, res);\n  };\n  this._logger = function (url, data, xhr, opts) {\n    try {\n      var d = {};\n      if (data && opts.json && typeof data == 'string') d = JSON.parse(data);\n      if (d.clearTextCardData && d.clearTextCardData.cvv) delete d.clearTextCardData.cvv;\n      if (d.payment_method && d.payment_method.credit_card && d.payment_method.credit_card.verification_value) delete d.payment_method.credit_card.verification_value;\n      var log = this._prepare_for_log({\n        url: url,\n        data: d,\n        xhr: {\n          // had to define these, can't stringify the raw xhr\n          readyState: xhr.readyState ? xhr.readyState : null,\n          response: xhr.response ? xhr.response : null,\n          responseText: xhr.responseText ? xhr.responseText : null,\n          responseURL: xhr.responseURL ? xhr.responseURL : null,\n          responseXML: xhr.responseXML ? xhr.responseXML : null,\n          status: xhr.status ? xhr.status : null,\n          statusText: xhr.statusText ? xhr.statusText : null,\n          timeout: xhr.timeout ? xhr.timeout : null\n        },\n        browser_info: this._get_browser_info()\n      });\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', this.url('shop/processors/logme2342311', true), true);\n      xhr.withCredentials = true;\n      xhr.setRequestHeader('content-type', 'application/json;charset=UTF-8');\n      xhr.send(JSON.stringify(log));\n    } catch (error) {\n      // console.error so we can reference this in FullStory\n      console.error('CPE7 Logger Error', error);\n    }\n  };\n  this._log_bad_trans = function (transaction) {\n    try {\n      // cloning object, so no ref\n      var t = transaction ? this._copy_object(transaction) : null;\n\n      // delete survey data && change the way we send over renewable array, else we get Disallowed Key Characters from Code Igniter\n      for (var key in t) {\n        if (key.indexOf('survey') > -1) delete t[key];\n        if (key.indexOf('renewable') > -1 && t[key].length > 0) {\n          var renewable_copy = JSON.parse(JSON.stringify(key));\n          delete t[key];\n          var renewable_ticket_key = renewable_copy.match(/\\[(.*?)\\]/)[1];\n          t.renewable = {};\n          t.renewable[renewable_ticket_key] = 'y';\n        }\n      }\n      var d = {\n        form_data: t,\n        transaction: t\n      };\n      d.form_data.errors_internal = this.errors_internal;\n      d.form_data.errors_processing = this.errors_processing;\n      if (!d.transaction.processor) d.transaction.processor = {\n        merch_gateway: transaction.processor_method ? transaction.processor_method : null\n      };\n      d.transaction.error_msg = this.errors_processing.join('\\n').replace(/<[^>]*>/g, \"\");\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', this.url('shop/carts/log_bad_trans', true), true);\n      xhr.withCredentials = true;\n      xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n      xhr.send(this._serializer(d));\n    } catch (error) {\n      console.warn('Could not log bad trans: ', error);\n    }\n  };\n  this._prepare_for_log = function (data) {\n    var str = JSON.stringify(data);\n\n    // mask cc data\n    str = str.replace(/\\b(?:\\d{3,4}[ -]?){3}(?=\\d{2,4}\\b)/gm, \"**** **** **** \");\n    return str;\n  };\n  this._get_browser_info = function () {\n    if (this.isHmtMobile) return {\n      platform: 'hmtMobile'\n    };\n    return {\n      platform: navigator && navigator.platform ? navigator.platform : '',\n      userAgent: navigator && navigator.userAgent ? navigator.userAgent : '',\n      vendor: navigator && navigator.vendor ? navigator.vendor : '',\n      vendorSub: navigator && navigator.vendorSub ? navigator.vendorSub : ''\n    };\n  };\n\n  // deep serialize object to form data\n  this._serializer = function (obj, serialize_without_repeat) {\n    var qs_opts = serialize_without_repeat ? {} : {\n      arrayFormat: 'repeat'\n    };\n    return _qs[\"default\"].stringify(obj, qs_opts);\n\n    // var pairs = [];\n    // for (var prop in obj) {\n    //     if (!obj.hasOwnProperty(prop)) {\n    //         continue;\n    //     }\n    //     if (Object.prototype.toString.call(obj[prop]) == '[object Object]') {\n    //         pairs.push(this._serializer(obj[prop]));\n    //         continue;\n    //     }\n    //     pairs.push(prop + '=' + obj[prop]);\n    // }\n    //\n    // return pairs.join('&');\n  };\n\n  // prepare the transaction data prior to submitting\n  this._prepare_transaction = function (transaction) {\n    // removing all phone special chars. Only allow numbers\n    if (transaction.phone) transaction.phone = this._format_phone_number(transaction.phone);\n\n    //we need to make sure old versions of lib work, so API sends new prop\n    if (transaction.new_processor_method) transaction.processor_method = transaction.new_processor_method;\n    return transaction;\n  };\n\n  // add a internal error\n  this._add_internal_error = function (err) {\n    this.errors_internal.push(err);\n    return false;\n  };\n\n  // add a processing error\n  this._add_processing_error = function (err) {\n    this.errors_processing.push(err);\n    return false;\n  };\n  this._copy_object = function (obj) {\n    try {\n      if ((0, _typeof2[\"default\"])(obj) != 'object') return false;\n      return JSON.parse(JSON.stringify(obj));\n    } catch (error) {\n      return false;\n    }\n  };\n  this.check_fullsteam_codes = function (errorCodes, flagged) {\n    for (var i = 0; i < errorCodes.length; i++) {\n      if (errorCodes[i].code === flagged) {\n        if (errorCodes[i].response === undefined) {\n          this._add_internal_error('An unknown error has occurred');\n          return 'An unknown error has occurred.';\n        }\n        this._add_internal_error('error response' + errorCodes[i].response);\n        return \"<b>\".concat(errorCodes[i].response, \"</b>\");\n      }\n    }\n    return 'Unknown error code occurred. Please try again.';\n  };\n};\nvar _default = exports[\"default\"] = hmt_client_processor;\n\n//# sourceURL=webpack://hmt_client_processor/./build/hmtclientprocessor.min.js?");

/***/ }),

/***/ "./src/fullsteamCodes/fullsteamCodes.js":
/*!**********************************************!*\
  !*** ./src/fullsteamCodes/fullsteamCodes.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AVS_response_codes: () => (/* binding */ AVS_response_codes),\n/* harmony export */   CVV_response_codes: () => (/* binding */ CVV_response_codes),\n/* harmony export */   responseCodes: () => (/* binding */ responseCodes)\n/* harmony export */ });\nconst responseCodes = [{\n    code: -999,\n    response: \"Unknown – an unknown error has occurred\"\n  },\n  {\n    code: 1,\n    response: \"System Error – processing of transaction failed. Please try again.\",\n  },\n  {\n    code: 10,\n    response: \"Validation Error – the request did not pass validation and could not be processed.\",\n  },\n  {\n    code: 20,\n    response: \"Transaction Not Found – the transaction referenced by the request was not found\",\n  },\n  {\n    code: 21,\n    response: \"Resource Not Found – the resource referenced by the request was not found\",\n  },\n  {\n    code: 22,\n    response: \"Duplicate RequestId – the RequestId provided in the request has already been used for the merchant.\",\n  },\n  {\n    code: 150,\n    response: \"Reversal Options Not Available – the reversal option requested cannot be performed on the transaction provided\",\n  },\n  {\n    code: 300,\n    response: \"Configuration Error – there is a configuration error within the FullsteamPay system. Please contact Fullsteam.\",\n  },\n  {\n    code: 400,\n    response: \"Communication Error – there has been a communication error with an external resource that caused the processing of the request to fail. Please try again.\",\n  },\n  {\n    code: 999,\n    response: \"Authentication Failure – the credentials provided are invalid or user does not have permission for action requested.\",\n  },\n  {\n    code: 1007,\n    response: \"ProcessorDCCRequested – Fullsteam received a DCC Requested response from the processor. The transaction is being attempted in a different currency than the card holder card supports by default.\",\n  },\n  {\n    code: 1020,\n    response: \"Card issuer has declined the transaction due to unspecified reason. Please contact card issuer for more information.\",\n  },\n  {\n    code: 1021,\n    response: \"Expired Card – the card issuer has declined the transaction because the card is expired, or the expiration date provided is invalid.\",\n  },\n  {\n    code: 1023,\n    response: \"Processor Duplicate – Fullsteam received a Duplicate response from the processor.  This means the processor has determined the transaction is a duplicate by their rules and the API request to Fullsteam did not disable duplicate detection. Currently, the processor defines a duplicate as a transaction for the same amount on the same card for the same merchant within the same batch within 25 transactions of the matching transaction.\",\n  },\n  {\n    code: 1024,\n    response: \"Card issuer has declined the transaction, card no longer valid.\",\n  },\n  {\n    code: 1025,\n    response: \"Processor Referral Call Issuer – Fullsteam received a Call Issuer response from the processor.  This means the card issuer has requested that the card holder call the card issuer to discuss the transaction and to verbally authorize the approval of the transaction.\",\n  },\n  {\n    code: 1030,\n    response: \"Processor Balance Not Available – Fullsteam received a Balance Not Available response the processor.  This means the card issuer has declined the transaction because the balance is not available on the card account to support the transaction.\",\n  },\n  {\n    code: 1090,\n    response: \"Processor Undefined Decline or Error – Fullsteam received an Undefined Decline or Error response from the processor.  This means the card issuer has declined the transaction for an undefined reason or some error occurred during the card issuers processing of the transaction.\",\n  },\n  {\n    code: 1101,\n    response: \"Invalid Data – Information provided is invalid, please correct all information inputted and try again.\",\n  },\n  {\n    code: 1102,\n    response: \"Processor Invalid Account – Fullsteam received an Invalid Account response from the processor.  This means something is incorrect about the merchant configuration at Fullsteam or at the processor.  Please contact Fullsteam.\",\n  },\n  {\n    code: 1103,\n    response: \"Invalid Request – Please carefully resubmit all information inputted and try again.\",\n  },\n  {\n    code: 1105,\n    response: 'Card number or card type submitted is invalid.'\n  },  \n  {\n    code: 1120,\n    response: \"Processor Out of Balance – Fullsteam received an Out of Balance response from the processor.  This should not occur because this error only occurs on merchant-initiated batch closes which are not currently supported.\",\n  },\n  {\n    code: 2001,\n    response: \"Processor Communication Error – the processor experienced an error trying to communicate with the card issuer and the transaction request cannot be processed. This transaction has been voided. Please try again.\",\n  },\n  {\n    code: 2002,\n    response: \"Processor Host Error – Fullsteam received a Host Error from the processor. This means the card issuer experienced an error trying to process the transaction request. It is possible that the card holder will see an open authorization if they view their card statement online after this error. However, the transaction has been voided and will not settle.\",\n  },\n  {\n    code: 2009,\n    response: \"Processor Error – Fullsteam received an Error response from the Processor. This means the processor or the card issuer experienced an error attempting to process the request and the transaction request was not processed.\",\n  },\n  {\n    code: 2999,\n    response: 'Processor Unknown Response – Fullsteam received an unknown response from the processor.'\n  },\n  {\n    code: 3101,\n    response: \"Signature Cancelled by User – the customer cancelled a contract signature process on the cloud terminal\",\n  },\n  {\n    code: 3102,\n    response: \"Signature Not Supported by Terminal – the terminal Id provided is not a terminal model that supports contract signature capture\",\n  },\n  {\n    code: 3103,\n    response: \"Signature Terminal Error – an error occurred on the terminal when attempting a contract signature capture\",\n  },\n  {\n    code: 3199,\n    response: \"Signature Unknown Error – an unknown error occurred when attempting a contract signature capture\",\n  },\n];\n\nconst AVS_response_codes = [{\n    code: \"A\",\n    response: \"Zip code does not match billing records\"\n  },\n  {\n    code: \"B\",\n    response: \"Incompatible Postal Code Format\",\n  },\n  {\n    code: \"C\",\n    response: \"Incompatible street address and postal code format\",\n  },\n  {\n    code: \"D\",\n    response: \"Street address and postal code match\"\n  },\n  {\n    code: \"E\",\n    response: \"Edit error\",\n  },\n  {\n    code: \"F\",\n    response: \"International Transaction: Street address and postal code match\",\n  },\n  {\n    code: \"G\",\n    response: \"Global participant, non-US Issuer does not participate in address service verification\"\n  },\n  {\n    code: \"I\",\n    response: \"International Transaction - Address information not verified for international transaction\",\n  },\n  {\n    code: \"J\",\n    response: \"American Express only. Card Member information and Ship-To Information Verified – Fraud Protection Program\",\n  },\n  {\n    code: \"K\",\n    response: \"American Express only.  Card Member information and Ship-To Information Verified – Standard\",\n  },\n  {\n    code: \"M\",\n    response: \"Match: Street address and postal code match\"\n  },\n  {\n    code: \"N\",\n    response: \"Address and zip code do not match billing records\"\n  },\n  {\n    code: \"P\",\n    response: \"Incompatible Street Address format\",\n  },\n  {\n    code: \"R\",\n    response: \"System unavailable or timed out, please resubmit your purchase\"\n  },\n  {\n    code: \"S\",\n    response: \"Service not supported - issuer does not support address verification service\",\n  },\n  {\n    code: \"T\",\n    response: \"Address does not match billing records\",\n  },\n  {\n    code: \"U\",\n    response: \"Address information is not available for the customer's credit card\",\n  },\n  {\n    code: \"W\",\n    response: \"Address does not match billing records.  For Discover Cards, no data was provided\",\n  },\n  {\n    code: \"X\",\n    response: \"Exact: Address and nine-digit zip code must match exact\"\n  },\n  {\n    code: \"Y\",\n    response: \"Yes: Address and five-digit zip code match\"\n  },\n  {\n    code: \"Z\",\n    response: \"Address does not match billing information\",\n  },\n  {\n    code: \"0\",\n    response: \"No address verification has been requested\"\n  },\n];\n\nconst CVV_response_codes = [{\n    code: \"M\",\n    response: \"Match\"\n  },\n  {\n    code: \"N\",\n    response: \"Incorrect CVV (Security Code)\"\n  },\n  {\n    code: \"P\",\n    response: \"Not Processed\"\n  },\n  {\n    code: \"S\",\n    response: \"CVV value should be on the card, but the merchant has indicated that it is not present\",\n  },\n  {\n    code: \"U\",\n    response: \"Issuer is not certified for CVV processing\",\n  },\n  {\n    code: \"X\",\n    response: \"Service provider did not respond\",\n  },\n];\n\n//# sourceURL=webpack://hmt_client_processor/./src/fullsteamCodes/fullsteamCodes.js?");

/***/ }),

/***/ "qs":
/*!**************************************************************************!*\
  !*** external {"commonjs":"qs","commonjs2":"qs","amd":"qs","root":"Qs"} ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_qs__;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n//# sourceURL=webpack://hmt_client_processor/./node_modules/@babel/runtime/helpers/asyncToGenerator.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n//# sourceURL=webpack://hmt_client_processor/./node_modules/@babel/runtime/helpers/interopRequireDefault.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/regeneratorRuntime.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/regeneratorRuntime.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var _typeof = (__webpack_require__(/*! ./typeof.js */ \"./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n//# sourceURL=webpack://hmt_client_processor/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n//# sourceURL=webpack://hmt_client_processor/./node_modules/@babel/runtime/helpers/typeof.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(/*! ../helpers/regeneratorRuntime */ \"./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n\n\n//# sourceURL=webpack://hmt_client_processor/./node_modules/@babel/runtime/regenerator/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./build/hmtclientprocessor.min.js");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});